#!/usr/bin/env bash

PIDFILE=/run/sleep-inhibitor
ACTIVE=true
CONF_DIR=/etc/sleep-inhibitor/sleep-inhibitor.d
declare -A LOCK_PIDS

echo $$ > $PIDFILE

function cleanup()
{
	rm $PIDFILE
	ACTIVE=false
	exit 0
}

function handle_suspend()
{
	echo Suspending...
	# do your things...
	cd ${CONF_DIR}
	for FILE in *.conf; do
		CONF="${FILE%.conf}"
		source ${FILE}
		echo "Executing task '${DOWN}'..."
		eval ${DOWN}
		# clear lock
		/usr/bin/kill ${LOCK_PIDS[${CONF}]}
	done
}

function handle_wakeup() {
	echo Waking up...
	# aquire new locks
	get_inhibit_locks
	# do your things
	cd ${CONF_DIR}
	for FILE in *.conf; do
		CONF="${FILE%.conf}"
		source ${FILE}
		echo "Executing task '${UP}'..."
		eval ${UP}
	done
}

function get_inhibit_locks()
{
	echo Obtain inhibit locks...
	cd ${CONF_DIR}
	for FILE in *.conf; do
		CONF="${FILE%.conf}"
		source ${FILE}
		/usr/bin/systemd-inhibit --who=sleep-inhibitor --what=sleep --why="${WHY}" --mode=delay /usr/bin/sleep infinity &
		LOCK_PIDS[${CONF}]=$!
		echo ${CONF} lock pid: $(echo ${LOCK_PIDS[${CONF}]}) 
	done
}

function monitorDbus()
{
	echo Monitoring dbus...
	while read msg; do
		if [[ "$msg" =~ .*"PrepareForSleep".* ]]; then
			case $msg in
				*true*)
					echo Dbus told us to prepare for sleep...
					handle_suspend
					;;
				*false*)
					echo Dbus told us we should wake up...
					handle_wakeup
					;;
			esac
		fi

	done < <(/usr/bin/gdbus monitor -y -d org.freedesktop.login1)
}

trap "cleanup" SIGINT SIGTERM SIGKILL
trap "suspend" SIGUSR1
trap "wakeup" SIGUSR2
get_inhibit_locks
monitorDbus &

while $ACTIVE; do
	sleep 5
done;
